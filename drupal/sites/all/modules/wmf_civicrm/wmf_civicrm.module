<?php

use Civi\WMFException\WMFException;

require_once 'recurring.inc';
require_once 'tracking.inc';

/**
 * @todo - delete or migrate to a setting.
 *
 * @deprecated
 * @return array
 */
function wmf_civicrm_menu() {
  $items = [];

  $items['admin/config/wmf_civicrm/matching_gifts'] = [
    'title' => t('Matching Gifts Employer Data'),
    'description' => t('Set matching gifts employer data config'),
    'page callback' => 'drupal_get_form',
    'page arguments' => ['wmf_civicrm_matching_gifts_form'],
    'access arguments' => ['administer site configuration'],
    'type' => MENU_NORMAL_ITEM,
  ];

  return $items;
}

/**
 * @return array
 * @todo - delete or migrate to a setting.
 *
 * @deprecated
 */
function wmf_civicrm_matching_gifts_form() {
  $form = [];

  $form['matching_gifts_employer_data_file_path'] = [
    '#type' => 'textfield',
    '#title' => 'File path for matching gifts employer data file',
    '#required' => TRUE,
    '#default_value' => variable_get(
      'matching_gifts_employer_data_file_path',
      '/srv/matching_gifts/employers.csv'
    ),
    '#description' => 'File path for matching gifts employer data file',
  ];

  return system_settings_form($form);
}

/**
 * @param $field_names
 * @param $group_name
 *
 * @deprecated - should not be needed with correct api v4 useage.
 *
 * @return array
 * @throws \CRM_Core_Exception
 */
function wmf_civicrm_get_custom_field_map($field_names, $group_name = NULL) {
  static $custom_fields = [];
  foreach ($field_names as $name) {
    if (empty($custom_fields[$name])) {
      $id = CRM_Core_BAO_CustomField::getCustomFieldID($name, $group_name);
      if (!$id) {
        throw new CRM_Core_Exception('id is missing: ' . $name . ' ' . $group_name);
      }
      $custom_fields[$name] = "custom_{$id}";
    }
  }

  return $custom_fields;
}
