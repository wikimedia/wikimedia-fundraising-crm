<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from exchange_rates/xml/schema/CRM/ExchangeRates/ExchangeRate.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:7249206776c445329f43044cf1e6c10e)
 */
use CRM_ExchangeRates_ExtensionUtil as E;

/**
 * Database access object for the ExchangeRate entity.
 */
class CRM_ExchangeRates_DAO_ExchangeRate extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_exchange_rate';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = FALSE;

  /**
   * Unique ExchangeRate ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * ISO currency code
   *
   * @var string|null
   *   (SQL type: char(3))
   *   Note that values will be retrieved from the database as a string.
   */
  public $currency;

  /**
   * USD value of a single unit of the currency
   *
   * @var float|string|null
   *   (SQL type: double)
   *   Note that values will be retrieved from the database as a string.
   */
  public $value_in_usd;

  /**
   * Timestamp of the last update on the local side
   *
   * @var string|null
   *   (SQL type: timestamp)
   *   Note that values will be retrieved from the database as a string.
   */
  public $local_update;

  /**
   * Timestamp of the last update on the bank side
   *
   * @var string
   *   (SQL type: timestamp)
   *   Note that values will be retrieved from the database as a string.
   */
  public $bank_update;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_exchange_rate';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Exchange Rates') : E::ts('Exchange Rate');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique ExchangeRate ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_exchange_rate.id',
          'table_name' => 'civicrm_exchange_rate',
          'entity' => 'ExchangeRate',
          'bao' => 'CRM_ExchangeRates_DAO_ExchangeRate',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'currency' => [
          'name' => 'currency',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Currency'),
          'description' => E::ts('ISO currency code'),
          'maxlength' => 3,
          'size' => CRM_Utils_Type::FOUR,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_exchange_rate.currency',
          'table_name' => 'civicrm_exchange_rate',
          'entity' => 'ExchangeRate',
          'bao' => 'CRM_ExchangeRates_DAO_ExchangeRate',
          'localizable' => 0,
          'add' => NULL,
        ],
        'value_in_usd' => [
          'name' => 'value_in_usd',
          'type' => CRM_Utils_Type::T_FLOAT,
          'title' => E::ts('Value In Usd'),
          'description' => E::ts('USD value of a single unit of the currency'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_exchange_rate.value_in_usd',
          'table_name' => 'civicrm_exchange_rate',
          'entity' => 'ExchangeRate',
          'bao' => 'CRM_ExchangeRates_DAO_ExchangeRate',
          'localizable' => 0,
          'add' => NULL,
        ],
        'local_update' => [
          'name' => 'local_update',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => E::ts('Local Update'),
          'description' => E::ts('Timestamp of the last update on the local side'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_exchange_rate.local_update',
          'default' => 'CURRENT_TIMESTAMP',
          'table_name' => 'civicrm_exchange_rate',
          'entity' => 'ExchangeRate',
          'bao' => 'CRM_ExchangeRates_DAO_ExchangeRate',
          'localizable' => 0,
          'add' => NULL,
        ],
        'bank_update' => [
          'name' => 'bank_update',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => E::ts('Bank Update'),
          'description' => E::ts('Timestamp of the last update on the bank side'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_exchange_rate.bank_update',
          'table_name' => 'civicrm_exchange_rate',
          'entity' => 'ExchangeRate',
          'bao' => 'CRM_ExchangeRates_DAO_ExchangeRate',
          'localizable' => 0,
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'exchange_rate', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'exchange_rate', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [
      'ExchangeRate_Currency_BankUpdate' => [
        'name' => 'ExchangeRate_Currency_BankUpdate',
        'field' => [
          0 => 'currency',
          1 => 'bank_update',
        ],
        'localizable' => FALSE,
        'unique' => TRUE,
        'sig' => 'civicrm_exchange_rate::1::currency::bank_update',
      ],
    ];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
