create table T344645 (
  invoice_id varchar(31) primary key,
  adyen_token varchar(31),
  ingenico_token varchar(255),
  contribution_tracking_id int(10) unsigned,
  contribution_id int(10) unsigned,
  contact_id int(10) unsigned,
  key ingtok (ingenico_token),
  key ctid (contribution_tracking_id),
  key contid (contribution_id),
  key cntctid (contact_id)
);
-- Then populate the first 3 columns from the CSV using inserts
-- generated by transform_csvs.sh

source inserts.sql;

create table contribution_recur_copy (
  id int(10) unsigned primary key,
  contact_id int(10) unsigned,
  invoice_id varchar(255),
  payment_token_id int(10) unsigned,
  ingenico_token varchar(255),
  cycle_day int unsigned,
  has_unique_ingenico_token tinyint,
  adyen_processor_contact_id varchar(255), -- to store in the new contribution_recur_smashpig.processor_contact_id
  adyen_token varchar(31),
  key crptid (payment_token_id),
  key cringtok (ingenico_token)
);

-- Right up front we limit to just migrating those attached to active recurrings
INSERT INTO contribution_recur_copy (id, contact_id, invoice_id, payment_token_id, ingenico_token, cycle_day)
SELECT r.id, r.contact_id, invoice_id, payment_token_id, t.token, cycle_day
FROM civicrm.civicrm_contribution_recur r
INNER JOIN civicrm.civicrm_payment_token t ON r.payment_token_id = t.id
WHERE r.payment_processor_id = 5
AND (end_date IS NULL OR end_date > NOW())
AND cancel_date IS NULL
AND contribution_status_id not in (1,3,4);
-- Query OK, 125689 rows affected (3.261 sec)
-- Records: 125689  Duplicates: 0  Warnings: 0

create table missing_tokens (
  ingenico_token varchar(255) primary key,
  contribution_recur_id int(10) unsigned,
  invoice_id varchar(255),
  key mtcrid (contribution_recur_id),
  key mtinvid (invoice_id)
);
